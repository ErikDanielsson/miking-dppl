// Test different ways of specifying funcions

// Test a recursive function
let fact n = if (n <= 1) then 1 else n * fact (n-1) in

utest (fact 0)   1;
utest (fact 1)   1;
utest (fact 2)   2;
utest (fact 3)   6;
utest (fact 6)   720;
utest (fact 12)  479001600;

//Test function with zero arguments
let foo1 _ = 5 in
let foo2 _ = 8 in
utest (foo1 ())    5;
utest (foo2 ())    8;

//Test functions with many arguments
let foo3 x f str = f x in
let incr x = x + 3 in
utest (foo3 8 incr "something") 11;

//Return a function with several arguments. Several scopes
let foo4 f x =
  let internal s1 s2 = f x ++ s1 ++ s2 in
  internal
in

let foo5 s = s ++ "|" in
let foo6 = foo4 foo5 "first" in
utest (foo6 "second" "last") "first|secondlast";

