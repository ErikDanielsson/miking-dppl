// Test different ways of specifying funcions

// Test a recursive function
let fact n = if (n <= 1) then 1 else n * fact(n-1) in

utest (fact 0)   1;
utest (fact 1)   1;
utest (fact 2)   2;
utest (fact 3)   6;
utest (fact 6)   720;
utest (fact 12)  479001600;

//Test function with zero arguments
let foo1 _ = 5 in
let foo2 _ = 8 in
utest (foo1 ())    5;
utest (foo2 ())    8;

//Test functions with many arguments
function foo3(x,f,str){
    f(x)
}
function incr(x) x + 3
utest foo3(8,incr,"something")          11

//Return a function with several arguments. Several scopes
function foo4(f,x) {
    function internal(s1,s2) {
        f(x) ++ s1 ++ s2
    }
    internal
}
function foo5(s) s ++ "|"
foo6 = foo4(foo5,"first")
utest foo6("second","last")       "first|secondlast"

