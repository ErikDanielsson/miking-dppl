// TimeTree, pitheciidae monkeys (source: http://timetree.org/)
tree = {age:17.99321625,left:{age:11.33054769,left:{age:5.4853,left:{age:0.},right:{age:2.9571,left:{age:0.},right:{age:0.}}},right:{age:7.31,left:{age:3.19694,left:{age:0.},right:{age:1.1078,left:{age:0.2283,left:{age:0.},right:{age:0.}},right:{age:0.}}},right:{age:7.11,left:{age:0.},right:{age:5.9,left:{age:3.2838,left:{age:2.9942,left:{age:0.},right:{age:0.}},right:{age:0.}},right:{age:0.}}}}},right:{age:11.01619834,left:{age:10.23796667,left:{age:6.1354,left:{age:3.04517,left:{age:2.2398,left:{age:1.72,left:{age:0.},right:{age:0.}},right:{age:0.}},right:{age:0.}},right:{age:5.69232,left:{age:4.3404,left:{age:2.81,left:{age:1.33,left:{age:0.},right:{age:0.}},right:{age:0.}},right:{age:0.}},right:{age:0.}}},right:{age:8.34,left:{age:0.},right:{age:4.88882,left:{age:2.0967,left:{age:0.},right:{age:0.}},right:{age:0.}}}},right:{age:4.4329,left:{age:0.},right:{age:2.6,left:{age:0.},right:{age:0.}}}}}

// Bisse tree
// tree = {age:13.016,left:{age:10.626,left:{age:8.352,left:{age:7.679,left:{age:5.187,left:{age:0},right:{age:0}},right:{age:5.196,left:{age:0},right:{age:4.871,left:{age:2.601,left:{age:0},right:{age:0}},right:{age:0}}}},right:{age:7.361,left:{age:3.818,left:{age:1.143,left:{age:0.829,left:{age:0},right:{age:0}},right:{age:0}},right:{age:1.813,left:{age:0.452,left:{age:0.203,left:{age:0},right:{age:0}},right:{age:0}},right:{age:0}}},right:{age:1.868,left:{age:0.866,left:{age:0},right:{age:0.001,left:{age:0},right:{age:0}}},right:{age:1.06,left:{age:0},right:{age:0}}}}},right:{age:10.536,left:{age:8.291,left:{age:1.396,left:{age:0.215,left:{age:0},right:{age:0}},right:{age:0}},right:{age:0}},right:{age:8.192,left:{age:0.56,left:{age:0},right:{age:0}},right:{age:0}}}},right:{age:8.958,left:{age:3.748,left:{age:0},right:{age:0.033,left:{age:0},right:{age:0}}},right:{age:7.775,left:{age:0.584,left:{age:0},right:{age:0}},right:{age:1.589,left:{age:0},right:{age:0}}}}}

function survival( startTime, lambda, mu ) {
    t ~ exponential(lambda + mu)

    currentTime = startTime - t
    if currentTime < 0 then
      true
    else {
      speciation ~ bernoulli(lambda/(lambda + mu))
      if !speciation then
          false
      else
          survival( currentTime, lambda, mu ) || survival( currentTime, lambda, mu )
    }
}

function simBranch( startTime, stopTime, lambda, mu ) {

    t ~ exponential( lambda )

    currentTime = startTime - t

    if currentTime <= stopTime then nop
    else {
      weight( log( 2.0 ) )
      s = if survival( currentTime, lambda, mu ) == false then 0.0 else -inf
      weight( s )

      simBranch( currentTime, stopTime, lambda, mu )
    }
}

function condBD( tree, parent, lambda, mu ) {
    weight( - mu * ( parent.age - tree.age ) )

    simBranch( parent.age, tree.age, lambda, mu )

    if tree.left != nop then {
        weight( log( 2.0 * lambda ) )
        condBD( tree.left , tree, lambda, mu)
        condBD( tree.right, tree, lambda, mu)
    } else {}
}

function model() {
    // lambda ~ gamma( 1.0, 1.0 )
    // mu     ~ gamma( 1.0, 1.0 )

    lambda = 0.2
    mu     = 0.1

    condBD( tree.left, tree, lambda, mu )
    if tree.right != nop then {
        weight( log( 2.0 ) )
        condBD( tree.right, tree, lambda, mu )
    } else {}

    lambda
}

infer(model)

