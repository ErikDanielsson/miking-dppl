tree =
  {right:{right:{age:0},
          left:{age:0},
          age:4},
   left:{right:{age:0},
         left:{age:0},
         age:6},
   age:10}

function survival( startTime, lambda, mu ) {
    t ~ exponential(lambda + mu)

    currentTime = startTime - t
    if currentTime < 0 then
      true
    else {
      speciation ~ bernoulli(lambda/(lambda + mu))
      if !speciation then
          false
      else
          survival( currentTime, lambda, mu ) || survival( currentTime, lambda, mu )
    }
}

function simBranch( startTime, stopTime, lambda, mu ) {

    t ~ exponential( lambda )

    currentTime = startTime - t

    if currentTime <= stopTime then ()
    else {
      weight( log( 2.0 ) )
      s = if survival( currentTime, lambda, mu ) == false then 0.0 else (-inf)
      weight( s )

      simBranch( currentTime, stopTime, lambda, mu )
    }
}

function condBD( tree, parent, lambda, mu ) {
    weight( - mu * ( parent.age - tree.age ) )

    simBranch( parent.age, tree.age, lambda, mu )

    match tree with
      | {left} ->
          { weight( log( 2.0 * lambda ) )
            condBD( tree.left , tree, lambda, mu)
            condBD( tree.right, tree, lambda, mu) }
      | _ -> ()
}

// lambda ~ gamma( 1.0, 1.0 )
// mu     ~ gamma( 1.0, 1.0 )

lambda = 0.2
mu     = 0.1

condBD( tree.left, tree, lambda, mu )
match tree with
  | {right} ->
      { weight( log( 2.0 ) )
        condBD( tree.right, tree, lambda, mu ) }
  | _ -> ()

(lambda,lambda)
